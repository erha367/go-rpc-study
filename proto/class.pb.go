// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: class.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//用户进入请求参数
type EnterReq struct {
	Account              string   `protobuf:"bytes,1,opt,name=Account,proto3" json:"Account,omitempty"`
	AccountType          int64    `protobuf:"zigzag64,2,opt,name=AccountType,proto3" json:"AccountType,omitempty"`
	Nickname             string   `protobuf:"bytes,3,opt,name=Nickname,proto3" json:"Nickname,omitempty"`
	Cookie               string   `protobuf:"bytes,4,opt,name=Cookie,proto3" json:"Cookie,omitempty"`
	Source               int64    `protobuf:"zigzag64,5,opt,name=Source,proto3" json:"Source,omitempty"`
	Client               int64    `protobuf:"zigzag64,6,opt,name=Client,proto3" json:"Client,omitempty"`
	LessonKey            string   `protobuf:"bytes,7,opt,name=LessonKey,proto3" json:"LessonKey,omitempty"`
	ClassId              int64    `protobuf:"zigzag64,8,opt,name=ClassId,proto3" json:"ClassId,omitempty"`
	Ip                   string   `protobuf:"bytes,9,opt,name=Ip,proto3" json:"Ip,omitempty"`
	HasCookie            bool     `protobuf:"varint,10,opt,name=HasCookie,proto3" json:"HasCookie,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnterReq) Reset()         { *m = EnterReq{} }
func (m *EnterReq) String() string { return proto.CompactTextString(m) }
func (*EnterReq) ProtoMessage()    {}
func (*EnterReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe9a8fd49cd72500, []int{0}
}
func (m *EnterReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EnterReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EnterReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EnterReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnterReq.Merge(m, src)
}
func (m *EnterReq) XXX_Size() int {
	return m.Size()
}
func (m *EnterReq) XXX_DiscardUnknown() {
	xxx_messageInfo_EnterReq.DiscardUnknown(m)
}

var xxx_messageInfo_EnterReq proto.InternalMessageInfo

func (m *EnterReq) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *EnterReq) GetAccountType() int64 {
	if m != nil {
		return m.AccountType
	}
	return 0
}

func (m *EnterReq) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *EnterReq) GetCookie() string {
	if m != nil {
		return m.Cookie
	}
	return ""
}

func (m *EnterReq) GetSource() int64 {
	if m != nil {
		return m.Source
	}
	return 0
}

func (m *EnterReq) GetClient() int64 {
	if m != nil {
		return m.Client
	}
	return 0
}

func (m *EnterReq) GetLessonKey() string {
	if m != nil {
		return m.LessonKey
	}
	return ""
}

func (m *EnterReq) GetClassId() int64 {
	if m != nil {
		return m.ClassId
	}
	return 0
}

func (m *EnterReq) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *EnterReq) GetHasCookie() bool {
	if m != nil {
		return m.HasCookie
	}
	return false
}

//用户点赞参数
type LikeReq struct {
	Account              string   `protobuf:"bytes,1,opt,name=Account,proto3" json:"Account,omitempty"`
	Status               int64    `protobuf:"zigzag64,2,opt,name=Status,proto3" json:"Status,omitempty"`
	LessonKey            string   `protobuf:"bytes,3,opt,name=LessonKey,proto3" json:"LessonKey,omitempty"`
	ClassId              int64    `protobuf:"zigzag64,4,opt,name=ClassId,proto3" json:"ClassId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LikeReq) Reset()         { *m = LikeReq{} }
func (m *LikeReq) String() string { return proto.CompactTextString(m) }
func (*LikeReq) ProtoMessage()    {}
func (*LikeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe9a8fd49cd72500, []int{1}
}
func (m *LikeReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LikeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LikeReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LikeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LikeReq.Merge(m, src)
}
func (m *LikeReq) XXX_Size() int {
	return m.Size()
}
func (m *LikeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_LikeReq.DiscardUnknown(m)
}

var xxx_messageInfo_LikeReq proto.InternalMessageInfo

func (m *LikeReq) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *LikeReq) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *LikeReq) GetLessonKey() string {
	if m != nil {
		return m.LessonKey
	}
	return ""
}

func (m *LikeReq) GetClassId() int64 {
	if m != nil {
		return m.ClassId
	}
	return 0
}

//用户返回
type DefaultRes struct {
	Res                  string   `protobuf:"bytes,1,opt,name=Res,proto3" json:"Res,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DefaultRes) Reset()         { *m = DefaultRes{} }
func (m *DefaultRes) String() string { return proto.CompactTextString(m) }
func (*DefaultRes) ProtoMessage()    {}
func (*DefaultRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe9a8fd49cd72500, []int{2}
}
func (m *DefaultRes) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DefaultRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DefaultRes.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DefaultRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DefaultRes.Merge(m, src)
}
func (m *DefaultRes) XXX_Size() int {
	return m.Size()
}
func (m *DefaultRes) XXX_DiscardUnknown() {
	xxx_messageInfo_DefaultRes.DiscardUnknown(m)
}

var xxx_messageInfo_DefaultRes proto.InternalMessageInfo

func (m *DefaultRes) GetRes() string {
	if m != nil {
		return m.Res
	}
	return ""
}

func init() {
	proto.RegisterType((*EnterReq)(nil), "proto.EnterReq")
	proto.RegisterType((*LikeReq)(nil), "proto.LikeReq")
	proto.RegisterType((*DefaultRes)(nil), "proto.DefaultRes")
}

func init() { proto.RegisterFile("class.proto", fileDescriptor_fe9a8fd49cd72500) }

var fileDescriptor_fe9a8fd49cd72500 = []byte{
	// 349 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0x5f, 0x4e, 0xf2, 0x40,
	0x14, 0xc5, 0xbf, 0x29, 0xff, 0xca, 0xe5, 0x0b, 0xe2, 0x3c, 0x98, 0x09, 0x9a, 0xa6, 0xe1, 0x09,
	0x63, 0x02, 0x89, 0xae, 0x40, 0xd1, 0x44, 0x22, 0xf1, 0xa1, 0xb8, 0x81, 0x32, 0x5e, 0x48, 0x43,
	0xe9, 0xd4, 0xce, 0xd4, 0x84, 0x5d, 0xf8, 0xe8, 0x92, 0x7c, 0x74, 0x09, 0x06, 0x37, 0x62, 0x66,
	0x3a, 0x15, 0x48, 0x0c, 0x4f, 0x9d, 0xdf, 0x99, 0x73, 0x6f, 0xcf, 0x9d, 0x0b, 0x2d, 0x1e, 0x87,
	0x52, 0x0e, 0xd2, 0x4c, 0x28, 0x41, 0x6b, 0xe6, 0xd3, 0x3d, 0x5d, 0x08, 0xb1, 0x88, 0x71, 0x68,
	0x68, 0x96, 0xcf, 0x87, 0xb8, 0x4a, 0xd5, 0xba, 0xf0, 0xf4, 0xde, 0x1c, 0x70, 0xef, 0x12, 0x85,
	0x59, 0x80, 0x2f, 0x94, 0x41, 0xe3, 0x9a, 0x73, 0x91, 0x27, 0x8a, 0x11, 0x9f, 0xf4, 0x9b, 0x41,
	0x89, 0xd4, 0x87, 0x96, 0x3d, 0x3e, 0xad, 0x53, 0x64, 0x8e, 0x4f, 0xfa, 0x34, 0xd8, 0x95, 0x68,
	0x17, 0xdc, 0xc7, 0x88, 0x2f, 0x93, 0x70, 0x85, 0xac, 0x62, 0x8a, 0x7f, 0x99, 0x9e, 0x40, 0x7d,
	0x24, 0xc4, 0x32, 0x42, 0x56, 0x35, 0x37, 0x96, 0xb4, 0x3e, 0x15, 0x79, 0xc6, 0x91, 0xd5, 0x4c,
	0x43, 0x4b, 0xc6, 0x1f, 0x47, 0x98, 0x28, 0x56, 0x2f, 0xf4, 0x82, 0xe8, 0x19, 0x34, 0x27, 0x28,
	0xa5, 0x48, 0x1e, 0x70, 0xcd, 0x1a, 0xa6, 0xd5, 0x56, 0xd0, 0xe9, 0x47, 0x7a, 0xfa, 0xf1, 0x33,
	0x73, 0x4d, 0x59, 0x89, 0xb4, 0x0d, 0xce, 0x38, 0x65, 0x4d, 0x53, 0xe0, 0x8c, 0x53, 0xdd, 0xe7,
	0x3e, 0x94, 0x36, 0x12, 0xf8, 0xa4, 0xef, 0x06, 0x5b, 0xa1, 0x27, 0xa1, 0x31, 0x89, 0x96, 0x78,
	0xf8, 0x41, 0x74, 0x74, 0x15, 0xaa, 0x5c, 0xda, 0xb7, 0xb0, 0xb4, 0x1f, 0xb1, 0x72, 0x20, 0x62,
	0x75, 0x2f, 0x62, 0xcf, 0x03, 0xb8, 0xc5, 0x79, 0x98, 0xc7, 0x2a, 0x40, 0x49, 0x3b, 0x50, 0x09,
	0x50, 0xda, 0x7f, 0xea, 0xe3, 0xe5, 0x1c, 0xfe, 0x1b, 0xeb, 0x14, 0xb3, 0xd7, 0x88, 0x23, 0xbd,
	0x80, 0x9a, 0x59, 0x1b, 0x3d, 0x2a, 0x16, 0x39, 0x28, 0x97, 0xd8, 0x3d, 0xb6, 0xc2, 0x4e, 0xbb,
	0x73, 0xa8, 0xea, 0x89, 0x68, 0xdb, 0x5e, 0xd9, 0xf1, 0xfe, 0xb0, 0xde, 0x74, 0x3e, 0x36, 0x1e,
	0xf9, 0xdc, 0x78, 0xe4, 0x6b, 0xe3, 0x91, 0xf7, 0x6f, 0xef, 0xdf, 0xac, 0x6e, 0x3c, 0x57, 0x3f,
	0x01, 0x00, 0x00, 0xff, 0xff, 0xf7, 0x3b, 0xd8, 0x86, 0x5b, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ClassServiceClient is the client API for ClassService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ClassServiceClient interface {
	//添加用户进出记录
	Enter(ctx context.Context, in *EnterReq, opts ...grpc.CallOption) (*DefaultRes, error)
	//用户点赞
	Like(ctx context.Context, in *LikeReq, opts ...grpc.CallOption) (*DefaultRes, error)
}

type classServiceClient struct {
	cc *grpc.ClientConn
}

func NewClassServiceClient(cc *grpc.ClientConn) ClassServiceClient {
	return &classServiceClient{cc}
}

func (c *classServiceClient) Enter(ctx context.Context, in *EnterReq, opts ...grpc.CallOption) (*DefaultRes, error) {
	out := new(DefaultRes)
	err := c.cc.Invoke(ctx, "/proto.ClassService/Enter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *classServiceClient) Like(ctx context.Context, in *LikeReq, opts ...grpc.CallOption) (*DefaultRes, error) {
	out := new(DefaultRes)
	err := c.cc.Invoke(ctx, "/proto.ClassService/Like", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ClassServiceServer is the server API for ClassService service.
type ClassServiceServer interface {
	//添加用户进出记录
	Enter(context.Context, *EnterReq) (*DefaultRes, error)
	//用户点赞
	Like(context.Context, *LikeReq) (*DefaultRes, error)
}

// UnimplementedClassServiceServer can be embedded to have forward compatible implementations.
type UnimplementedClassServiceServer struct {
}

func (*UnimplementedClassServiceServer) Enter(ctx context.Context, req *EnterReq) (*DefaultRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Enter not implemented")
}
func (*UnimplementedClassServiceServer) Like(ctx context.Context, req *LikeReq) (*DefaultRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Like not implemented")
}

func RegisterClassServiceServer(s *grpc.Server, srv ClassServiceServer) {
	s.RegisterService(&_ClassService_serviceDesc, srv)
}

func _ClassService_Enter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClassServiceServer).Enter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ClassService/Enter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClassServiceServer).Enter(ctx, req.(*EnterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClassService_Like_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LikeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClassServiceServer).Like(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ClassService/Like",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClassServiceServer).Like(ctx, req.(*LikeReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _ClassService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.ClassService",
	HandlerType: (*ClassServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Enter",
			Handler:    _ClassService_Enter_Handler,
		},
		{
			MethodName: "Like",
			Handler:    _ClassService_Like_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "class.proto",
}

func (m *EnterReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EnterReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EnterReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.HasCookie {
		i--
		if m.HasCookie {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x50
	}
	if len(m.Ip) > 0 {
		i -= len(m.Ip)
		copy(dAtA[i:], m.Ip)
		i = encodeVarintClass(dAtA, i, uint64(len(m.Ip)))
		i--
		dAtA[i] = 0x4a
	}
	if m.ClassId != 0 {
		i = encodeVarintClass(dAtA, i, uint64((uint64(m.ClassId)<<1)^uint64((m.ClassId>>63))))
		i--
		dAtA[i] = 0x40
	}
	if len(m.LessonKey) > 0 {
		i -= len(m.LessonKey)
		copy(dAtA[i:], m.LessonKey)
		i = encodeVarintClass(dAtA, i, uint64(len(m.LessonKey)))
		i--
		dAtA[i] = 0x3a
	}
	if m.Client != 0 {
		i = encodeVarintClass(dAtA, i, uint64((uint64(m.Client)<<1)^uint64((m.Client>>63))))
		i--
		dAtA[i] = 0x30
	}
	if m.Source != 0 {
		i = encodeVarintClass(dAtA, i, uint64((uint64(m.Source)<<1)^uint64((m.Source>>63))))
		i--
		dAtA[i] = 0x28
	}
	if len(m.Cookie) > 0 {
		i -= len(m.Cookie)
		copy(dAtA[i:], m.Cookie)
		i = encodeVarintClass(dAtA, i, uint64(len(m.Cookie)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Nickname) > 0 {
		i -= len(m.Nickname)
		copy(dAtA[i:], m.Nickname)
		i = encodeVarintClass(dAtA, i, uint64(len(m.Nickname)))
		i--
		dAtA[i] = 0x1a
	}
	if m.AccountType != 0 {
		i = encodeVarintClass(dAtA, i, uint64((uint64(m.AccountType)<<1)^uint64((m.AccountType>>63))))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Account) > 0 {
		i -= len(m.Account)
		copy(dAtA[i:], m.Account)
		i = encodeVarintClass(dAtA, i, uint64(len(m.Account)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *LikeReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LikeReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LikeReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ClassId != 0 {
		i = encodeVarintClass(dAtA, i, uint64((uint64(m.ClassId)<<1)^uint64((m.ClassId>>63))))
		i--
		dAtA[i] = 0x20
	}
	if len(m.LessonKey) > 0 {
		i -= len(m.LessonKey)
		copy(dAtA[i:], m.LessonKey)
		i = encodeVarintClass(dAtA, i, uint64(len(m.LessonKey)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Status != 0 {
		i = encodeVarintClass(dAtA, i, uint64((uint64(m.Status)<<1)^uint64((m.Status>>63))))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Account) > 0 {
		i -= len(m.Account)
		copy(dAtA[i:], m.Account)
		i = encodeVarintClass(dAtA, i, uint64(len(m.Account)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DefaultRes) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DefaultRes) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DefaultRes) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Res) > 0 {
		i -= len(m.Res)
		copy(dAtA[i:], m.Res)
		i = encodeVarintClass(dAtA, i, uint64(len(m.Res)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintClass(dAtA []byte, offset int, v uint64) int {
	offset -= sovClass(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *EnterReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Account)
	if l > 0 {
		n += 1 + l + sovClass(uint64(l))
	}
	if m.AccountType != 0 {
		n += 1 + sozClass(uint64(m.AccountType))
	}
	l = len(m.Nickname)
	if l > 0 {
		n += 1 + l + sovClass(uint64(l))
	}
	l = len(m.Cookie)
	if l > 0 {
		n += 1 + l + sovClass(uint64(l))
	}
	if m.Source != 0 {
		n += 1 + sozClass(uint64(m.Source))
	}
	if m.Client != 0 {
		n += 1 + sozClass(uint64(m.Client))
	}
	l = len(m.LessonKey)
	if l > 0 {
		n += 1 + l + sovClass(uint64(l))
	}
	if m.ClassId != 0 {
		n += 1 + sozClass(uint64(m.ClassId))
	}
	l = len(m.Ip)
	if l > 0 {
		n += 1 + l + sovClass(uint64(l))
	}
	if m.HasCookie {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LikeReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Account)
	if l > 0 {
		n += 1 + l + sovClass(uint64(l))
	}
	if m.Status != 0 {
		n += 1 + sozClass(uint64(m.Status))
	}
	l = len(m.LessonKey)
	if l > 0 {
		n += 1 + l + sovClass(uint64(l))
	}
	if m.ClassId != 0 {
		n += 1 + sozClass(uint64(m.ClassId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DefaultRes) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Res)
	if l > 0 {
		n += 1 + l + sovClass(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovClass(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozClass(x uint64) (n int) {
	return sovClass(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *EnterReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowClass
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EnterReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EnterReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Account", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClass
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthClass
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthClass
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Account = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountType", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClass
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			m.AccountType = int64(v)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Nickname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClass
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthClass
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthClass
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Nickname = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cookie", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClass
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthClass
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthClass
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cookie = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Source", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClass
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			m.Source = int64(v)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Client", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClass
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			m.Client = int64(v)
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LessonKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClass
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthClass
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthClass
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LessonKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassId", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClass
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			m.ClassId = int64(v)
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ip", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClass
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthClass
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthClass
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ip = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasCookie", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClass
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HasCookie = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipClass(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthClass
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthClass
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LikeReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowClass
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LikeReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LikeReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Account", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClass
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthClass
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthClass
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Account = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClass
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			m.Status = int64(v)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LessonKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClass
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthClass
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthClass
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LessonKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassId", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClass
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			v = (v >> 1) ^ uint64((int64(v&1)<<63)>>63)
			m.ClassId = int64(v)
		default:
			iNdEx = preIndex
			skippy, err := skipClass(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthClass
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthClass
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DefaultRes) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowClass
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DefaultRes: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DefaultRes: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Res", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClass
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthClass
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthClass
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Res = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipClass(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthClass
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthClass
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipClass(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowClass
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowClass
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowClass
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthClass
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupClass
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthClass
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthClass        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowClass          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupClass = fmt.Errorf("proto: unexpected end of group")
)
